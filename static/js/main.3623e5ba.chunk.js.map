{"version":3,"sources":["Components/Footer/Footer.js","Context.js","Components/Home/Home.js","Components/Register/Register.js","Components/Login/Login.js","Components/AddRemedy/AddRemedy.js","Components/SearchResults/SearchResults.js","Components/MaladyList/MaladyList.js","helperFunctions.js","Components/MaladyList/Remedy/Remedy.js","Components/MaladyList/Malady/Malady.js","Components/AddMalady/AddMalady.js","Components/MaladyNotFound/MaladyNotFound.js","ErrorPage/ErrorPage.js","Components/Main/Main.js","Components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","href","React","Component","createContext","maladies","remedies","isLoggedIn","likes","myLikes","handleLogIn","handleLogout","handleMyLikes","Home","id","type","placeholder","contextType","Context","Register","props","state","email","username","password","repeatPassword","error","htmlFor","name","this","Login","handleLogin","e","preventDefault","console","log","context","onClick","to","AddRemedy","header","noHeader","cols","rows","SearchResults","MaladyList","allMaladies","sort","a","b","malady_name","map","malady","key","prop","maladyId","filter","remedy","remedy_malady","getNumOfRemedies","length","Remedy","feedback","liked","likeId","dislikes","createdRem","deleteIt","handleDelete","likeIt","src","height","setState","alt","rem","remedy_name","remedy_description","remedy_reference","Malady","updateForm","showForm","showSym","parseInt","match","params","maladyPage","malady_description","malady_symptoms","remedyPage","AddMalady","MaladyNotFound","addMalady","ErrorPage","Main","exact","path","component","Nav","closeMenu","isOpen","menuProp","navBar","width","right","onStateChange","handleStateChange","App","userid","contextVal","appPage","Provider","value","basename","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3623e5ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Footer.css'\r\n\r\nexport default class Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='footer-bar'>\r\n                <p><a href=\"https://icons8.com/icons/set/alternative-herbal-medicine\">Alternative Herbal Medicine icon</a> icon by <a href=\"https://icons8.com\">Icons8</a></p>\r\n                <p><a href=\"https://icons8.com/icons/set/good-quality\">Good Quality icon</a> icon by <a href=\"https://icons8.com\">Icons8</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nexport default React.createContext({\r\n    maladies: [],\r\n    remedies: [],\r\n    isLoggedIn: false,\r\n    likes: [],\r\n    myLikes: [],\r\n    handleLogIn:()=>{},\r\n    handleLogout:()=>{},\r\n    handleMyLikes:()=>{}\r\n})","import React from 'react'\r\nimport './Home.css'\r\nimport {Link} from 'react-router-dom'\r\nimport Context from '../../Context'\r\n\r\nexport default class Home extends React.Component {\r\n\r\n\r\n    static contextType = Context\r\n\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n\r\n            <div className=\"home-page\">\r\n\r\n                <section className=\"home-search\">\r\n                    <h1 className = \"home-hero\">Alternative Remedies for the People.{<br />} <span className = \"subheader-home\">By the People.</span></h1>\r\n                    \r\n                    <form id = 'home-search-form'>\r\n                        <input type='text' \r\n                                id='home-search-term' \r\n                                placeholder = \"Find a condition. e.g. 'Flu'\"\r\n                                >\r\n                                </input>\r\n\r\n\r\n                        <button\r\n                            type='submit'\r\n                            id = 'search-button'\r\n                            ></button>\r\n                    </form>\r\n\r\n                    \r\n\r\n                </section>\r\n\r\n                <section className=\"app-explain\">\r\n                    <p>OurHealth allows you to find and share the best alternative and natural remedies.</p>\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport './Register.css'\r\nimport config from '../../config'\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            repeatPassword: \"\",\r\n            error: \"\"\r\n        }\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='register-page'>\r\n                <header className = \"register-header\">\r\n                <h1>Register</h1>\r\n                </header>\r\n                <section className = \"register-body\">\r\n                <form className = \"register-form\">\r\n\r\n                    <label htmlFor='Email' >Email</label><br />\r\n                    <input\r\n                        type='text'\r\n                        id='email'\r\n                        name='email'\r\n                        ></input><br />\r\n\r\n\r\n                    <label htmlFor='username' >Username</label><br />\r\n                    <input\r\n                        type='text'\r\n                        id='username'\r\n                        name='username'\r\n                        ></input><br />\r\n\r\n                    <label htmlFor='Password' >Password <span className=\"p-advice\"> (min. 6 characters)</span></label><br />\r\n                    <input\r\n                        type='password'\r\n                        id='password'\r\n                        name='password'\r\n                        ></input><br />\r\n\r\n                    <label htmlFor='repeatPassword' >Repeat Password</label><br />\r\n                    <input\r\n                        type='password'\r\n                        id='repeatPassword'\r\n                        name='repeatPassword'\r\n                        ></input><br />\r\n\r\n                        <p>{this.state.error}</p>\r\n\r\n                    <button className = \"login-button\" type='submit'>Register</button>\r\n                </form>            \r\n                </section>\r\n            </div>\r\n        )}\r\n}","import React from 'react'\r\nimport './Login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport config from '../../config'\r\nimport Context from '../../Context'\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    static contextType = Context\r\n\r\n    handleLogin = (e) =>{\r\n        e.preventDefault()\r\n        console.log('inside handle login')\r\n        this.context.handleLogIn()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='login-page'>\r\n\r\n                <header className=\"login-page-header\">\r\n                    <div className=\"background-box\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n                </header>\r\n\r\n                <section className=\"login-body\">\r\n                    <form className=\"login-form\">\r\n                        <label htmlFor='Username'>Username/Email <br /></label>\r\n                        <input\r\n                            type='text'\r\n                            id='login-username'\r\n                            name='login-username'></input><br />\r\n\r\n                        <label htmlFor='Password'>Password<br /></label>\r\n                        <input\r\n                            type='password'\r\n                            id='login-password'\r\n                            name='login-password'></input><br />\r\n                        <p>Click button for automatic login</p>\r\n                        <button className=\"login-button\" type=\"submit\" onClick={this.handleLogin}>Login</button>\r\n\r\n                    </form>\r\n\r\n                    <p>Not a member? <Link to='/register' className=\"register-link\">Register</Link></p>\r\n                </section>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './AddRemedy.css'\r\nimport config from '../../config'\r\nimport Context from '../../Context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class AddRemedy extends React.Component {\r\n\r\n    render() {\r\n\r\n        let header = this.props.noHeader ? <header>\r\n                                                <h1 className=\"malady-page-header\">Add Remedy</h1>\r\n                                            </header>\r\n                                            :\r\n                                            <header className=\"add-page-header\">\r\n                                                <h1>Add Remedy</h1>\r\n                                            </header>\r\n        return (\r\n            \r\n            <div className='add-page'>\r\n                {header}\r\n                <form id=\"new-remedy-form\">\r\n                    <label htmlFor='malady'>Malady</label><br />\r\n                    <input\r\n                        type='text'\r\n                        id='malady'\r\n                       >\r\n                    </input>\r\n\r\n                    <label htmlFor='remedy'>Remedy Name</label><br />\r\n                    <input\r\n                        type='textarea'\r\n                        id=\"remedy\"\r\n                        >\r\n                    </input><br />\r\n\r\n                    <label htmlFor='description'>Description</label><br />\r\n                    <textarea\r\n                        type='text'\r\n                        id=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"10\"\r\n                        \r\n                    ></textarea><br />\r\n\r\n                    <label htmlFor='reference'>Reference</label><br />\r\n                    <input\r\n                        type='text'\r\n                        id=\"reference\"\r\n                    ></input><br />\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"login-button\">\r\n                        Add\r\n                    </button>\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './SearchResults.css'\r\n\r\nexport default class SearchResults extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className = 'results-page'>\r\n            <h1>Results</h1>\r\n            <h2>List of Maladies</h2>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './MaladyList.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Context from '../../Context'\r\nimport { getNumOfRemedies } from '../../helperFunctions'\r\n\r\nexport default class MaladyList extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    static contextType = Context;\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const alphMal = this.context.maladies.sort((a, b) => (a.malady_name > b.malady_name) ? 1 : -1)\r\n        \r\n        const allMaladies = alphMal\r\n            .map(malady => <Link to={`/malady/${malady.id}`}\r\n                                key={malady.id}\r\n                                prop={malady}\r\n                                className=\"browse-maladies-link\">\r\n\r\n                            {malady.malady_name}\r\n\r\n                            <span className=\"remedies-counter\">{getNumOfRemedies(this.context.remedies, malady.id).length + \" Remedies\"}</span>\r\n                        </Link>)\r\n        \r\n        return (\r\n\r\n            <div className='malady-page'>\r\n\r\n                <header className=\"malady-head\">\r\n                    <section className=\"border-box\">\r\n                    <h1>Maladies</h1>\r\n                    </section>\r\n                </header>\r\n\r\n                <section className=\"browse-maladies-section\">\r\n                    {allMaladies}\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","export const getNumOfRemedies=(remedies=[], maladyId)=>(\r\n    (!maladyId)?\r\n    remedies:\r\n    remedies.filter(remedy=> remedy.remedy_malady === maladyId)\r\n)","import React from 'react'\r\nimport './Remedy.css'\r\nimport Context from '../../../Context'\r\nimport config from '../../../config'\r\n\r\nexport default class Remedy extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            feedback: false,\r\n            liked: null,\r\n            likeId: \"\",\r\n            likes: 0,\r\n            dislikes: 0,\r\n            createdRem: [],\r\n            error: \"\"\r\n        }\r\n    }\r\n\r\n    static contextType = Context\r\n\r\n    \r\n    render() {\r\n        const deleteIt = this.state.createdRem.length === 0 ? \"\" : <button onClick={this.handleDelete}>Delete</button>\r\n        const likeIt =  <div>\r\n                            <span className=\"likes-count\">{this.state.likes}</span>\r\n                                <img src=\"https://img.icons8.com/office/40/000000/good-quality.png\" \r\n                                    className=\"like-button\"\r\n                                    height=\"40px\"\r\n                                    onClick={()=>this.setState({error:\"Must be logged in to give feedback\"})}\r\n                                    alt=\"thumbs up icon\" />\r\n\r\n                            <span className=\"likes-count\">{this.state.dislikes}</span>\r\n                                <img src=\"https://img.icons8.com/officel/40/000000/poor-quality.png\" \r\n                                    className=\"like-button\"\r\n                                    height=\"40px\"\r\n                                    onClick={()=>this.setState({error:\"Must be logged in to give feedback\"})}\r\n                                    alt=\"thumbs down icon\" />\r\n                        </div>\r\n                                                                                                            \r\n        return (\r\n\r\n            <div className=\"remedy-section\">\r\n                <h2>{this.props.rem.remedy_name}</h2>\r\n\r\n                <p>{this.props.rem.remedy_description}</p>\r\n                {likeIt}\r\n                <p className =\"feedback-error\">{this.state.error}</p>\r\n                {deleteIt}\r\n                <p>Reference: {this.props.rem.remedy_reference}</p>\r\n                <p>--</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './Malady.css'\r\nimport Context from '../../../Context'\r\nimport Remedy from '../Remedy/Remedy'\r\nimport AddRemedy from '../../AddRemedy/AddRemedy'\r\n\r\nexport default class Malady extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showForm: false,\r\n            showSym: true,\r\n            error: \"\"\r\n        }\r\n    }\r\n\r\n    static contextType = Context\r\n\r\n    updateForm = () => {\r\n        this.context.isLoggedIn?\r\n        this.setState({\r\n            showForm: !this.state.showForm\r\n        }):\r\n        this.setState({\r\n            error: \"Must be logged in to add a remedy\"\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const remedy = this.context.remedies.filter(remedy => remedy.remedy_malady === parseInt(this.props.match.params.id))\r\n        const malady = this.context.maladies.filter(malady => malady.id === parseInt(this.props.match.params.id))\r\n        const maladyPage = malady.map(malady => <div className=\"malady-section\" key={malady.id}>\r\n\r\n                                                    <header className=\"malady-page-head\">\r\n                                                        <div className=\"mal-head-box\">\r\n                                                            <h1>{malady.malady_name}</h1>\r\n                                                            <p>{malady.malady_description}</p>\r\n                                                        </div>\r\n                                                    </header>\r\n\r\n                                                    <section className=\"malady-subsection\">\r\n                                                        <h2 className=\"symptoms-label\" onClick={this.showSym}>Symptoms</h2>\r\n                                                        <p>{this.state.showSym && malady.malady_symptoms}</p>\r\n                                                    </section>\r\n                                                    \r\n                                                </div>)\r\n\r\n        const remedyPage = remedy.length !== 0 ? remedy.map(remedy => <Remedy \r\n                                                                        rem={remedy} \r\n                                                                        key={remedy.id}>\r\n                                                                        </Remedy>) \r\n                                                                        :\r\n                                                                    <p className =\"no-remedies\">\r\n                                                                        There are no remedies for this condition yet.\r\n                                                                        </p>\r\n\r\n        return (\r\n            <div className='malady-page'>\r\n\r\n\r\n                {maladyPage}\r\n\r\n                <section className=\"remedies-header\">\r\n                    <h1>Remedies</h1>\r\n                </section>\r\n\r\n                <section className=\"remedy-page\">\r\n                    {this.state.showForm && <AddRemedy noHeader={true}></AddRemedy>}\r\n                    <p className=\"click-to-add\" onClick={this.updateForm}>Click to {this.state.showForm ? \"collapse form\" : \"add remedy\"}</p>\r\n                    <p className=\"add-error\">{this.state.error}</p>\r\n                    {remedyPage}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './AddMalady.css'\r\nimport config from '../../config'\r\nimport Context from '../../Context'\r\n\r\nexport default class AddMalady extends React.Component {\r\n\r\n    static contextType = Context\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className='add-malady-page'>\r\n\r\n                <header className=\"add-malady-page-header\">\r\n                    <h1>Add Malady</h1>\r\n                </header>\r\n\r\n                <section className=\"add-mal-body\">\r\n                    <form className=\"add-mal-form\" >\r\n                        <label htmlFor='name'>Malady Name</label><br />\r\n                        <input\r\n                            type='list'\r\n                            id='name'\r\n                            >\r\n                        </input><br />\r\n\r\n                        <label htmlFor='symptoms'>Symptoms</label><br />\r\n                        <textarea\r\n                            type='text'\r\n                            id=\"symptoms\"\r\n                            cols=\"30\"\r\n                            rows=\"10\"\r\n                            >\r\n                        </textarea><br />\r\n\r\n                        <label htmlFor='description'>Description</label><br />\r\n                        <textarea\r\n                            type='text'\r\n                            id=\"description\"\r\n                            cols=\"30\"\r\n                            rows=\"10\"\r\n                            >\r\n                        </textarea><br />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className = \"login-button\">\r\n                            Add\r\n                    </button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport AddMalady from '../AddMalady/AddMalady';\r\nimport Context from '../../Context'\r\nimport { Link } from 'react-router-dom'\r\nimport './MaladyNotFound.css'\r\n\r\nexport default class MaladyNotFound extends React.Component {\r\n\r\n\r\n    static contextType = Context\r\n\r\n    render() {\r\n        const addMalady = this.context.isLoggedIn ? <AddMalady></AddMalady> :\r\n            <div>\r\n                <p><Link to='/login'>Login</Link> to add a Malady</p>\r\n            </div>\r\n        return (\r\n            <div className=\"not-found\">\r\n                <header>\r\n                    <h1>Sorry we couldnt find any result for \"{this.props.match.params.name}\"</h1>\r\n                    <h2>Would you like to add it?</h2>\r\n                </header>\r\n                {addMalady}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class ErrorPage extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className = \"error-page\">\r\n                <h1>Something is not quite right with us.</h1>\r\n                <h2>Please check back again soon.</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport  Home from '../Home/Home.js'\r\nimport Register from  '../Register/Register'\r\nimport Login from '../Login/Login'\r\nimport AddRemedy from '../AddRemedy/AddRemedy.js'\r\nimport SearchResults from '../SearchResults/SearchResults.js'\r\nimport MaladyList from '../MaladyList/MaladyList'\r\nimport Malady from '../MaladyList/Malady/Malady'\r\nimport AddMalady from '../AddMalady/AddMalady.js'\r\nimport MaladyNotFound from '../MaladyNotFound/MaladyNotFound.js'\r\nimport ErrorPage from '../../ErrorPage/ErrorPage.js'\r\n\r\nexport default class Main extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n\r\n        <Switch>\r\n\r\n            <Route exact path ='/' component = {Home}></Route> \r\n\r\n            <Route path = '/register' component = {Register}></Route>\r\n\r\n            <Route path = '/login' component = {Login}></Route>\r\n\r\n            <Route path = '/maladylist' component = {MaladyList}></Route>\r\n\r\n            <Route path = '/addremedy' component = {AddRemedy}></Route>\r\n\r\n            <Route path = '/addmalady' component = {AddMalady}></Route>\r\n\r\n            <Route path = '/search' component = {SearchResults}></Route>\r\n\r\n            <Route path = '/malady/:id' component = {Malady}></Route>\r\n\r\n            <Route path = '/maladynotfound/:name' component = {MaladyNotFound}></Route>\r\n\r\n            <Route path = '/ErrorPage' component = {ErrorPage}></Route>\r\n\r\n\r\n        </Switch>            \r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './Nav.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Context from '../../Context'\r\nimport { slide as Menu } from 'react-burger-menu'\r\n\r\n\r\nexport default class Nav extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            isOpen: false\r\n        }\r\n    }\r\n\r\n    static contextType = Context\r\n    \r\n    handleStateChange (state) {\r\n        this.setState({isOpen: state.isOpen})  \r\n      }\r\n\r\n    handleLogout=()=>{\r\n        this.context.handleLogout()\r\n    }\r\n\r\n    closeMenu=()=>{\r\n        this.setState({\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let menuProp = this.state.isOpen\r\n        let navBar = this.context.isLoggedIn ?\r\n            <div className='nav-bar'>\r\n                <ul className = 'screen-nav-bar'>\r\n                    \r\n\r\n                    <li><Link to='/' className=\"nav-bar-link\">Home</Link></li>\r\n\r\n                    <li><Link to='/maladylist' className=\"nav-bar-link\">Maladies</Link></li>\r\n\r\n                    <li><Link to='/addremedy' className=\"nav-bar-link\">Add Remedy</Link></li>\r\n\r\n                    <li><Link to='/addmalady' className=\"nav-bar-link\">Add Malady</Link></li>\r\n                \r\n                    <li><Link to='/login' className=\"nav-bar-link\" onClick = {this.handleLogout}>Logout</Link></li>\r\n\r\n                </ul>\r\n\r\n                <Menu isOpen = {menuProp}\r\n                       width = {'100%'}\r\n                       right\r\n                      onStateChange={(state) => this.handleStateChange(state)}>\r\n                \r\n\r\n                    <Link to='/' className=\"nav-link\" onClick = {this.closeMenu}>Home</Link>\r\n\r\n                    <Link to='/maladylist' className=\"nav-link\" onClick = {this.closeMenu}>Maladies</Link>\r\n\r\n                    <Link to='/addremedy' className=\"nav-link\" onClick = {this.closeMenu}>Add Remedy</Link>\r\n\r\n                    <Link to='/addmalady' className=\"nav-link\" onClick = {this.closeMenu}>Add Malady</Link>\r\n\r\n                    <Link to='/login' className=\"nav-link\" onClick = {this.handleLogout}>Logout</Link>\r\n\r\n                </Menu>\r\n\r\n\r\n            </div>:\r\n            <div className='nav-bar'>\r\n\r\n                <ul className = 'screen-nav-bar'>\r\n\r\n                    <li><Link to='/' className=\"nav-bar-link\" >Home</Link></li>\r\n\r\n                    <li><Link to='/maladylist' className=\"nav-bar-link\">Maladies</Link></li>\r\n\r\n                    <li><Link to='/login' className=\"nav-bar-link\">Login</Link></li>\r\n\r\n                    <li><Link to='/register' className=\"nav-bar-link\">Register</Link></li>\r\n\r\n                </ul>\r\n\r\n            <Menu isOpen = {menuProp}  \r\n                  width = {'100%'}  \r\n                  right       \r\n                  onStateChange={(state) => this.handleStateChange(state)}>\r\n\r\n                <Link to='/' className=\"nav-link\" onClick = {this.closeMenu}>Home</Link>\r\n\r\n                <Link to='/maladylist' className=\"nav-link\" onClick = {this.closeMenu}>Maladies</Link>\r\n\r\n                <Link to='/login' className=\"nav-link\" onClick = {this.closeMenu}>Login</Link>\r\n\r\n                <Link to='/register' className=\"nav-link\" onClick = {this.closeMenu}>Register</Link>\r\n\r\n\r\n        </Menu>\r\n        \r\n        </div>\r\n        \r\n        return (\r\n            <div>\r\n            {navBar}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Footer from './Components/Footer/Footer'\r\nimport Main from './Components/Main/Main'\r\nimport Nav from './Components/Nav/Nav'\r\nimport Context from './Context'\r\nimport config from './config'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport './app.css'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      maladies: [\r\n        {\r\n          id:1,\r\n          malady_name: \"lice\",\r\n          malady_description: \"bad bugs\",\r\n          malady_symptoms: \"itchy\", \r\n          userid : null \r\n  },\r\n      {\r\n          id:2,\r\n          malady_name: \"cold\",\r\n          malady_description: \"virus\",\r\n      malady_symptoms: \"cough\", \r\n      userid : null\r\n  },\r\n      {\r\n          id:3,\r\n          malady_name: \"obesity\",\r\n          malady_description: \"being overweight\",\r\n      malady_symptoms: \"overeating\", \r\n      userid : null\r\n  }\r\n      ],\r\n      remedies: [\r\n        {\r\n          id:1,\r\n          remedy_name: \"lice spray\",\r\n          remedy_description: \"Buy a spray and solve the problem\",\r\n          remedy_reference: \"website\",\r\n          remedy_malady: 1, \r\n          userid : null \r\n  },\r\n      {\r\n          id:2,\r\n          remedy_name: \"cold medicine\",\r\n          remedy_description: \"go to cvs and buy cold medicine\",\r\n          remedy_reference: \"website\",\r\n          remedy_malady: 2, \r\n          userid : null\r\n  },\r\n      {\r\n          id:3,\r\n          remedy_name: \"obesity\",\r\n          remedy_description: \"eating less\",\r\n          remedy_reference: \"website\",\r\n          remedy_malady: 3, \r\n          userid : null\r\n  }\r\n      ],\r\n      isLoggedIn: false,\r\n      likes: [],\r\n      error: false\r\n    }\r\n  }\r\n\r\n\r\n  handleLogIn =()=>{\r\n    console.log('inside app')\r\n    this.setState({\r\n      isLoggedIn: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    \r\n    const contextVal = {\r\n      remedies: this.state.remedies,\r\n      maladies: this.state.maladies,\r\n      isLoggedIn: this.state.isLoggedIn,\r\n      likes: this.state.likes,\r\n      error: this.state.error,\r\n      handleLogIn: this.handleLogIn\r\n\r\n    }\r\n\r\n    const appPage = this.state.error? <div>\r\n  <h1>Something went wrong  :/ {<br />}We are working on a fix :)</h1>\r\n                                      </div>:\r\n                                      \r\n                                      <Context.Provider value={contextVal}>\r\n                                        <HashRouter basename='/'>\r\n                                      <div className=\"app\">\r\n                                        <Nav></Nav>\r\n                            \r\n                                        <Main></Main>\r\n                            \r\n                                        <Footer></Footer>\r\n                                      </div>\r\n                                      </HashRouter>\r\n                                  </Context.Provider>\r\nreturn (\r\n      <div>\r\n        {appPage}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}